name: build-and-push

on:
  pull_request:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/2223-5ahif-syp/gh-action-demo
  REPO_NAME: 02-5ahif-syp-maturareferate-JakobRathberger-NiklasNeudorfer

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Package
        run: ./mvnw clean package -DskipTests

      - name: Build and push images
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./src/main/docker/Dockerfile.jvm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

  tests:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Run Tests
        run: ./mvnw test

  deploy:
    name: deploy
    needs: [ build, tests ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: install ssh key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_SERVER_PRIVATE_KEY }}

      - name: create .ssh/known_hosts
        run: ssh-keyscan -H -t rsa -v ${{ secrets.SERVER }}  >> ~/.ssh/known_hosts

      - name: test ssh
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }} "ls"

      - name: Copy required files
        run: |
          scp -r docker-compose.yaml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }}:/home/${{ secrets.SERVER_USER }}/gh-actions-demo

      - name: Run Docker Container
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }} "
          cd /home/${{ secrets.SERVER_USER }}/gh-actions-demo
          echo ${{ github.token }} | docker login https://docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker compose pull
          docker compose stop
          docker compose rm -f
          docker compose up -d
          "
